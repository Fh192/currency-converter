{"version":3,"sources":["components/Currency/Currency.module.css","components/TabBox/TabBox.module.css","components/CurrenciesList/CurrenciesList.module.css","components/Swap/Swap.module.css","components/Footer/Result/Result.module.css","components/CurrencyInput/CurrencyInput.module.css","common/common.ts","svg/Arrow.tsx","svg/Ð¡ross.tsx","components/Currency/Currency.tsx","components/CurrenciesList/CurrenciesList.tsx","components/CurrencyInput/CurrencyInput.tsx","hooks/useOnClickOutside.ts","api/instance.ts","api/currency.ts","components/Footer/Result/Result.tsx","components/Footer/Footer.tsx","components/AmountInput/AmountInput.tsx","svg/SwapIcon.tsx","components/Swap/Swap.tsx","components/TabBox/TabBox.tsx","components/App.tsx","reportWebVitals.ts","index.tsx","components/Footer/Footer.module.css","components/AmountInput/AmountInput.module.css"],"names":["module","exports","currencyFullName","ARS","AUD","AZN","BHD","BTC","BOB","BRL","GBP","BND","CAD","KYD","CLP","CNY","COP","CZK","DKK","EGP","EUR","FJD","GEL","GHS","HKD","HUF","ISK","INR","IDR","ILS","JPY","JOD","KZT","KWD","MYR","MXN","MAD","TWD","NZD","NIO","NOK","OMR","PKR","PYG","PEN","PHP","PLN","QAR","RON","RUB","SAR","SGD","ZAR","KRW","SEK","CHF","THB","TND","TRY","UAH","AED","UYU","USD","VEF","VND","currencyCodeMap","Object","fromEntries","keys","map","el","setCommasInNumber","value","splitValue","split","result","counter","i","length","reverse","join","undefined","replace","errorMessage","Arrow","size","xmlns","fill","viewBox","width","height","fillRule","d","clipRule","Cross","Currency","currency","countryCode","selectMode","setSelectMode","setCurrency","setFilterValue","className","styles","onClick","src","alt","visible","fullName","CurrenciesList","filterValue","props","filteredCurrencies","filter","match","toUpperCase","currenciesList","noResults","CurrencyInput","label","ref","useRef","useState","handler","useEffect","listener","event","current","contains","target","document","addEventListener","removeEventListener","useOnClickOutside","inputWrap","inputName","htmlFor","inputInner","type","id","autoFocus","onChange","e","placeholder","autoComplete","crossWrap","currencyWrap","arrowWrap","instance","axios","create","baseURL","currencyApi","getLatestRate","from","to","a","get","response","data","Result","amount","currencyRate","changeInPercentage","fixedAmount","toFixed","resultFrom","resultTo","percentageChange","higher","lower","neutral","console","log","Footer","countdown","error","lastUpdate","footer","timer","AmountInput","setAmount","currencySymbol","getSymbolFromCurrency","replaceAll","isNaN","onBlur","toString","Number","isInteger","SwapIcon","Swap","setFrom","setTo","swapping","setSwapping","swap","setTimeout","clearTimeout","swapAnimation","TabBox","setCurrencyRate","setChangeInPercentage","setLastUpdate","setError","setCountdown","success","setSuccess","setLastCurrencyUpdate","tm","date","Date","month","day","year","time","slice","status","rate","o","percents","cp","msg","fetchRate","interval","setInterval","v","clearInterval","tabBox","row","App","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","getElementById"],"mappings":"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","file":"static/js/main.c96b7044.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"currency\":\"Currency_currency__3mJVx\",\"fullName\":\"Currency_fullName__4Y5GY\",\"visible\":\"Currency_visible__1-gYm\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"tabBox\":\"TabBox_tabBox__1Gr4k\",\"row\":\"TabBox_row__1eQJD\",\"currencyWrap\":\"TabBox_currencyWrap__2h-L6\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"currenciesList\":\"CurrenciesList_currenciesList__3DIE_\",\"noResults\":\"CurrenciesList_noResults__MmQRJ\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"swap\":\"Swap_swap__1piV2\",\"swapAnimation\":\"Swap_swapAnimation__Fdr6d\",\"rotateSwapBtn\":\"Swap_rotateSwapBtn__3Vbp0\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"result\":\"Result_result__3UT89\",\"resultFrom\":\"Result_resultFrom__1K8ES\",\"resultTo\":\"Result_resultTo__1RLv8\",\"percentageChange\":\"Result_percentageChange__jEP8A\",\"lower\":\"Result_lower__3a14J\",\"higher\":\"Result_higher__3uIOS\",\"neutral\":\"Result_neutral__3wTYm\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"inputWrap\":\"CurrencyInput_inputWrap__nxQzc\",\"inputInner\":\"CurrencyInput_inputInner__3k4n0\",\"inputName\":\"CurrencyInput_inputName__3SJit\",\"arrowWrap\":\"CurrencyInput_arrowWrap__3MGXY\",\"crossWrap\":\"CurrencyInput_crossWrap__3pPSN\",\"currencyWrap\":\"CurrencyInput_currencyWrap__1UR-K\"};","export type Currencies = keyof typeof currencyFullName;\r\nexport type CurrencyFullName = { [key in Currencies]: string };\r\nexport type CurrencyCodeMap = { [key in Currencies]: string };\r\n\r\nexport const currencyFullName = {\r\n  ARS: 'Argentine Peso',\r\n  AUD: 'Australian Dollar',\r\n  AZN: 'Azerbaijani Manat',\r\n  BHD: 'Bahraini Dinar',\r\n  BTC: 'Bitcoin',\r\n  BOB: 'Bolivian Boliviano',\r\n  BRL: 'Brazilian Real',\r\n  GBP: 'British Pound Sterling',\r\n  BND: 'Brunei Dollar',\r\n  CAD: 'Canadian Dollar',\r\n  KYD: 'Cayman Islands Dollar',\r\n  CLP: 'Chilean Peso',\r\n  CNY: 'Chinese Yuan',\r\n  COP: 'Colombian Peso',\r\n  CZK: 'Czech Republic Koruna',\r\n  DKK: 'Danish Krone',\r\n  EGP: 'Egyptian Pound',\r\n  EUR: 'Euro',\r\n  FJD: 'Fijian Dollar',\r\n  GEL: 'Georgian Lari',\r\n  GHS: 'Ghanaian Cedi',\r\n  HKD: 'Hong Kong Dollar',\r\n  HUF: 'Hungarian Forint',\r\n  ISK: 'Icelandic KrÃÂ³na',\r\n  INR: 'Indian Rupee',\r\n  IDR: 'Indonesian Rupiah',\r\n  ILS: 'Israeli New Sheqel',\r\n  JPY: 'Japanese Yen',\r\n  JOD: 'Jordanian Dinar',\r\n  KZT: 'Kazakhstani Tenge',\r\n  KWD: 'Kuwaiti Dinar',\r\n  MYR: 'Malaysian Ringgit',\r\n  MXN: 'Mexican Peso',\r\n  MAD: 'Moroccan Dirham',\r\n  TWD: 'New Taiwan Dollar',\r\n  NZD: 'New Zealand Dollar',\r\n  NIO: 'Nicaraguan CÃÂ³rdoba',\r\n  NOK: 'Norwegian Krone',\r\n  OMR: 'Omani Rial',\r\n  PKR: 'Pakistani Rupee',\r\n  PYG: 'Paraguayan Guarani',\r\n  PEN: 'Peruvian Nuevo Sol',\r\n  PHP: 'Philippine Peso',\r\n  PLN: 'Polish Zloty',\r\n  QAR: 'Qatari Rial',\r\n  RON: 'Romanian Leu',\r\n  RUB: 'Russian Ruble',\r\n  SAR: 'Saudi Riyal',\r\n  SGD: 'Singapore Dollar',\r\n  ZAR: 'South African Rand',\r\n  KRW: 'South Korean Won',\r\n  SEK: 'Swedish Krona',\r\n  CHF: 'Swiss Franc',\r\n  THB: 'Thai Baht',\r\n  TND: 'Tunisian Dinar',\r\n  TRY: 'Turkish Lira',\r\n  UAH: 'Ukrainian Hryvnia',\r\n  AED: 'United Arab Emirates Dirham',\r\n  UYU: 'Uruguayan Peso',\r\n  USD: 'US Dollar',\r\n  VEF: 'Venezuelan BolÃÂ­var',\r\n  VND: 'Vietnamese Dong',\r\n};\r\nexport const currencyCodeMap = Object.fromEntries(\r\n  (Object.keys(currencyFullName) as Array<Currencies>).map(el => [\r\n    el,\r\n    el[0] + el[1],\r\n  ])\r\n);\r\n\r\nexport const setCommasInNumber = (value: string) => {\r\n  const splitValue = value.split('.');\r\n  let result = '';\r\n  let counter = 0;\r\n\r\n  for (let i = splitValue[0].length - 1; i >= 0; i--) {\r\n    result += splitValue[0][i];\r\n    counter += 1;\r\n\r\n    if (counter === 3) {\r\n      counter = 0;\r\n      result += ',';\r\n    }\r\n  }\r\n\r\n  result = result.split('').reverse().join('');\r\n\r\n  if (splitValue[1] !== undefined) result += '.' + splitValue[1];\r\n\r\n  if (result[0] === ',') {\r\n    result = result.replace(result[0], '');\r\n  }\r\n\r\n  return result;\r\n};\r\n\r\nexport const errorMessage =\r\n  'Access block for you, You have reached maximum 3 limit per minute in free account, Please stop extra hits or upgrade your account. Restriction remove after 1 minute.';\r\n","import React from 'react';\r\n\r\nconst Arrow: React.FC<{ size: string }> = ({ size }) => {\r\n  return (\r\n    <svg\r\n      xmlns='http://www.w3.org/2000/svg'\r\n      fill='none'\r\n      viewBox='0 0 16 10'\r\n      width={size}\r\n      height={size}\r\n    >\r\n      <path\r\n        fill='rgb(20, 30, 55)'\r\n        fillRule='evenodd'\r\n        d='M8 9.5L.5 2 1.55.95 8 7.4 14.45.95 15.5 2 8 9.5z'\r\n        clipRule='evenodd'\r\n      />\r\n    </svg>\r\n  );\r\n};\r\n\r\nexport default Arrow;\r\n","import React from 'react';\r\n\r\nconst Cross: React.FC<{ size: string }> = ({ size }) => {\r\n  return (\r\n    <svg\r\n      xmlns='http://www.w3.org/2000/svg'\r\n      fill='none'\r\n      viewBox='0 0 413.348 413.348'\r\n      width={size}\r\n      height={size}\r\n    >\r\n      <path\r\n        fill='rgb(20, 30, 55)'\r\n        fillRule='evenodd'\r\n        d='m413.348 24.354-24.354-24.354-182.32 182.32-182.32-182.32-24.354 24.354 182.32 182.32-182.32 182.32 24.354 24.354 182.32-182.32 182.32 182.32 24.354-24.354-182.32-182.32z'\r\n      />\r\n    </svg>\r\n  );\r\n};\r\n\r\nexport default Cross;\r\n","import React from 'react';\r\nimport { Currencies, currencyFullName } from '../../common/common';\r\nimport styles from './Currency.module.css';\r\n\r\ninterface Props {\r\n  currency: Currencies;\r\n  countryCode: string;\r\n  selectMode: boolean;\r\n  setCurrency: React.Dispatch<React.SetStateAction<Currencies>>;\r\n  setSelectMode: React.Dispatch<React.SetStateAction<boolean>>;\r\n  setFilterValue: React.Dispatch<React.SetStateAction<string>>;\r\n}\r\n\r\nconst Currency: React.FC<Props> = ({\r\n  currency,\r\n  countryCode,\r\n  selectMode,\r\n  setSelectMode,\r\n  setCurrency,\r\n  setFilterValue,\r\n}) => {\r\n  return (\r\n    <li\r\n      className={styles.currency}\r\n      onClick={() => {\r\n        if (selectMode) {\r\n          setCurrency(currency);\r\n          setSelectMode(false);\r\n          setFilterValue('');\r\n        }\r\n      }}\r\n    >\r\n      <img\r\n        src={`https://www.countryflags.io/${countryCode}/flat/64.png`}\r\n        alt={`${countryCode} flag`}\r\n      />\r\n      <span>{currency}</span>\r\n      <div className={styles.visible}>\r\n        <span>&nbsp;â&nbsp;</span>\r\n        <span className={styles.fullName}>{currencyFullName[currency]}</span>\r\n      </div>\r\n    </li>\r\n  );\r\n};\r\n\r\nexport default Currency;\r\n","import React from 'react';\r\nimport {\r\n  Currencies,\r\n  currencyCodeMap,\r\n  currencyFullName,\r\n} from '../../common/common';\r\nimport Currency from '../Currency/Currency';\r\nimport styles from './CurrenciesList.module.css';\r\n\r\ninterface Props {\r\n  selectMode: boolean;\r\n  filterValue: string;\r\n  \r\n  setCurrency: React.Dispatch<React.SetStateAction<Currencies>>;\r\n  setSelectMode: React.Dispatch<React.SetStateAction<boolean>>;\r\n  setFilterValue: React.Dispatch<React.SetStateAction<string>>;\r\n}\r\n\r\nconst CurrenciesList: React.FC<Props> = ({ filterValue, ...props }) => {\r\n  const currencies = Object.keys(currencyCodeMap) as Array<Currencies>;\r\n\r\n  const filterCurrency = (currency: Currencies) => {\r\n    if (filterValue.length > 0) {\r\n      return (\r\n        currency.match(filterValue) ||\r\n        currencyFullName[currency].toUpperCase().match(filterValue)\r\n      );\r\n    }\r\n\r\n    return currency;\r\n  };\r\n\r\n  const filteredCurrencies = currencies.filter(filterCurrency);\r\n\r\n  return (\r\n    <ul className={styles.currenciesList}>\r\n      {filteredCurrencies.length > 0 ? (\r\n        <>\r\n          {filteredCurrencies.map(currency => (\r\n            <Currency\r\n              currency={currency}\r\n              countryCode={currencyCodeMap[currency]}\r\n              selectMode={props.selectMode}\r\n              setSelectMode={props.setSelectMode}\r\n              setFilterValue={props.setFilterValue}\r\n              setCurrency={props.setCurrency}\r\n              key={currency}\r\n            />\r\n          ))}\r\n        </>\r\n      ) : (\r\n        <div className={styles.noResults}>\r\n          <span>No results available</span>\r\n        </div>\r\n      )}\r\n    </ul>\r\n  );\r\n};\r\n\r\nexport default CurrenciesList;\r\n","import React, { useRef, useState } from 'react';\r\nimport { Currencies, currencyCodeMap } from '../../common/common';\r\nimport useOnClickOutside from '../../hooks/useOnClickOutside';\r\nimport Arrow from '../../svg/Arrow';\r\nimport Cross from '../../svg/Ð¡ross';\r\nimport CurrenciesList from '../CurrenciesList/CurrenciesList';\r\nimport Currency from '../Currency/Currency';\r\nimport styles from './CurrencyInput.module.css';\r\n\r\ninterface Props {\r\n  setCurrency: React.Dispatch<React.SetStateAction<Currencies>>;\r\n  currency: Currencies;\r\n  label: 'To' | 'From';\r\n}\r\n\r\nconst CurrencyInput: React.FC<Props> = ({ label, currency, setCurrency }) => {\r\n  const ref = useRef(null);\r\n\r\n  const [selectMode, setSelectMode] = useState(false);\r\n  const [filterValue, setFilterValue] = useState('');\r\n\r\n  useOnClickOutside(ref, () => {\r\n    if (selectMode) setFilterValue('');\r\n    setSelectMode(false);\r\n  });\r\n\r\n  return (\r\n    <div className={styles.inputWrap}>\r\n      <label\r\n        className={styles.inputName}\r\n        htmlFor='from'\r\n        onClick={() => setSelectMode(true)}\r\n      >\r\n        {label}\r\n      </label>\r\n      <>\r\n        {selectMode ? (\r\n          <div className={styles.inputInner} ref={ref}>\r\n            <input\r\n              type='text'\r\n              id={label}\r\n              value={filterValue}\r\n              autoFocus={true}\r\n              onChange={e => setFilterValue(e.target.value.toUpperCase())}\r\n              placeholder='Type to search...'\r\n              autoComplete='off'\r\n            />\r\n            <CurrenciesList\r\n              filterValue={filterValue}\r\n              selectMode={selectMode}\r\n              setCurrency={setCurrency}\r\n              setSelectMode={setSelectMode}\r\n              setFilterValue={setFilterValue}\r\n            />\r\n            <div\r\n              className={styles.crossWrap}\r\n              onClick={() => setSelectMode(false)}\r\n            >\r\n              <Cross size='13px' />\r\n            </div>\r\n          </div>\r\n        ) : (\r\n          <div\r\n            className={styles.currencyWrap}\r\n            onClick={() => setSelectMode(true)}\r\n          >\r\n            <Currency\r\n              countryCode={currencyCodeMap[currency]}\r\n              selectMode={selectMode}\r\n              currency={currency}\r\n              setCurrency={setCurrency}\r\n              setSelectMode={setSelectMode}\r\n              setFilterValue={setFilterValue}\r\n            />\r\n            <div\r\n              className={styles.arrowWrap}\r\n              onClick={() => setSelectMode(true)}\r\n            >\r\n              <Arrow size='16px' />\r\n            </div>\r\n          </div>\r\n        )}\r\n      </>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default CurrencyInput;\r\n","import { RefObject, useEffect } from 'react';\r\n\r\ntype AnyEvent = MouseEvent | TouchEvent;\r\n\r\nexport default function useOnClickOutside<T extends HTMLElement = HTMLElement>(\r\n  ref: RefObject<T>,\r\n  handler: (event: AnyEvent) => void\r\n) {\r\n  useEffect(() => {\r\n    const listener = (event: AnyEvent) => {\r\n      const el = ref?.current;\r\n\r\n      if (!el || el.contains(event.target as Node)) {\r\n        return;\r\n      }\r\n\r\n      handler(event);\r\n    };\r\n\r\n    document.addEventListener(`mousedown`, listener);\r\n    document.addEventListener(`touchstart`, listener);\r\n\r\n    return () => {\r\n      document.removeEventListener(`mousedown`, listener);\r\n      document.removeEventListener(`touchstart`, listener);\r\n    };\r\n  }, [ref, handler]);\r\n}\r\n","import axios from 'axios';\r\n\r\nexport const access_key = 'OcYxup70EMV725EY7WkPuqgKZ';\r\n\r\nconst instance = axios.create({\r\n  baseURL: 'https://fcsapi.com/api-v3/forex/',\r\n});\r\n\r\nexport default instance;\r\n","import { LatestRateResponse } from './../types/apiTypes';\r\nimport instance, { access_key } from './instance';\r\n\r\nconst currencyApi = {\r\n  getLatestRate: async (from: string, to: string) => {\r\n    const response = await instance.get<LatestRateResponse>(\r\n      `latest?symbol=${from}/${to}&access_key=${access_key}`\r\n    );\r\n\r\n    return response.data;\r\n  },\r\n};\r\n\r\nexport default currencyApi;\r\n","import React from 'react';\r\nimport {\r\n  Currencies,\r\n  currencyFullName,\r\n  setCommasInNumber,\r\n} from '../../../common/common';\r\nimport styles from './Result.module.css';\r\n\r\ninterface Props {\r\n  from: Currencies;\r\n  to: Currencies;\r\n  currencyRate: number;\r\n  changeInPercentage: string;\r\n  amount: string;\r\n}\r\n\r\nconst Result: React.FC<Props> = ({\r\n  from,\r\n  to,\r\n  amount,\r\n  currencyRate,\r\n  changeInPercentage,\r\n}) => {\r\n  const fixedAmount = (+amount).toFixed(2);\r\n\r\n  return (\r\n    <div className={styles.result}>\r\n      <p className={styles.resultFrom}>\r\n        <span>{+amount > 0 ? setCommasInNumber(fixedAmount) : 1}&nbsp;</span>\r\n        <span>{currencyFullName[from]}&nbsp;</span>\r\n        <span>=</span>\r\n      </p>\r\n      <p className={styles.resultTo}>\r\n        <span>\r\n          {+amount > 0\r\n            ? setCommasInNumber((currencyRate * +fixedAmount).toFixed(2))\r\n            : currencyRate.toFixed(2)}\r\n          &nbsp;\r\n        </span>\r\n        <span>{`${currencyFullName[to]}s`}&nbsp;</span>\r\n        <sup\r\n          className={`${styles.percentageChange} ${\r\n            +changeInPercentage.replace('%', '') > 0\r\n              ? styles.higher\r\n              : +changeInPercentage.replace('%', '') < 0\r\n              ? styles.lower\r\n              : styles.neutral\r\n          }`}\r\n        >\r\n          {console.log()}\r\n          <span>{changeInPercentage}</span>\r\n        </sup>\r\n      </p>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Result;\r\n","import React from 'react';\r\nimport {\r\n  Currencies,\r\n  currencyFullName,\r\n  errorMessage,\r\n} from '../../common/common';\r\nimport styles from './Footer.module.css';\r\nimport Result from './Result/Result';\r\n\r\ninterface Props {\r\n  from: Currencies;\r\n  to: Currencies;\r\n  currencyRate: number;\r\n  changeInPercentage: string;\r\n  amount: string;\r\n  lastUpdate: string;\r\n  error: string;\r\n  countdown: number;\r\n}\r\n\r\nconst Footer: React.FC<Props> = ({\r\n  countdown,\r\n  from,\r\n  to,\r\n  error,\r\n  lastUpdate,\r\n  ...props\r\n}) => {\r\n  return (\r\n    <div className={styles.footer}>\r\n      <Result\r\n        from={from}\r\n        to={to}\r\n        amount={props.amount}\r\n        currencyRate={props.currencyRate}\r\n        changeInPercentage={props.changeInPercentage}\r\n      />\r\n      {error.length > 0 && (\r\n        <div className={styles.error}>\r\n          <span>{`${error}`}</span>\r\n          {error === errorMessage + ' (API restriction)' && (\r\n            <span className={styles.timer}>{countdown}</span>\r\n          )}\r\n        </div>\r\n      )}\r\n      {lastUpdate && (\r\n        <div className={styles.lastUpdate}>\r\n          <span>\r\n            <span>{currencyFullName[from]}</span>\r\n            {' to '}\r\n            <span>{currencyFullName[to]}</span>\r\n            {' conversion '}\r\n            {' â '}\r\n            <span>{`Last updated ${lastUpdate}`}</span>\r\n            {' UTC '}\r\n          </span>\r\n        </div>\r\n      )}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Footer;\r\n","import getSymbolFromCurrency from 'currency-symbol-map';\r\nimport React from 'react';\r\nimport { Currencies, setCommasInNumber } from '../../common/common';\r\nimport styles from './AmountInput.module.css';\r\n\r\ninterface Props {\r\n  from: Currencies;\r\n  amount: string;\r\n\r\n  setAmount: React.Dispatch<React.SetStateAction<string>>;\r\n}\r\n\r\nconst AmountInput: React.FC<Props> = ({ from, amount, setAmount }) => {\r\n  const onAmountChange = (e: React.ChangeEvent<HTMLInputElement>) => {\r\n    const value = e.target.value.replaceAll(',', '');\r\n\r\n    if (isNaN(+value)) {\r\n      setAmount(a => a);\r\n    } else {\r\n      setAmount(value);\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div className={styles.inputWrap}>\r\n      <label className={styles.inputName} htmlFor='amount'>\r\n        Amount\r\n      </label>\r\n      <div className={styles.inputInner}>\r\n        <div className={styles.currencySymbol}>\r\n          {getSymbolFromCurrency(from)}\r\n        </div>\r\n        <input\r\n          type='text'\r\n          id='amount'\r\n          value={setCommasInNumber(amount)}\r\n          onChange={onAmountChange}\r\n          onBlur={() => {\r\n            if (+amount <= 0) setAmount('1');\r\n            setAmount(a => (+a).toFixed(2).toString());\r\n          }}\r\n          onClick={() => {\r\n            setAmount(a => {\r\n              if (Number.isInteger(+a)) {\r\n                return (+a).toFixed(0).toString();\r\n              }\r\n              return a;\r\n            });\r\n          }}\r\n          autoComplete='off'\r\n        />\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default AmountInput;\r\n","import React from 'react';\r\n\r\nconst SwapIcon: React.FC<{ size: string }> = ({ size }) => {\r\n  return (\r\n    <svg\r\n      xmlns='http://www.w3.org/2000/svg'\r\n      fill='none'\r\n      viewBox='0 0 17 17'\r\n      width={size}\r\n      height={size}\r\n    >\r\n      <path\r\n        fill='rgb(0, 108, 224)'\r\n        fillRule='evenodd'\r\n        d='M11.726 1.273l2.387 2.394H.667V5h13.446l-2.386 2.393.94.94 4-4-4-4-.94.94zM.666 12.333l4 4 .94-.94L3.22 13h13.447v-1.333H3.22l2.386-2.394-.94-.94-4 4z'\r\n        clipRule='evenodd'\r\n      ></path>\r\n    </svg>\r\n  );\r\n};\r\n\r\nexport default SwapIcon;\r\n","import React, { useState } from 'react';\r\nimport { Currencies } from '../../common/common';\r\nimport SwapIcon from '../../svg/SwapIcon';\r\nimport styles from './Swap.module.css';\r\n\r\ninterface Props {\r\n  from: Currencies;\r\n  to: Currencies;\r\n\r\n  setTo: React.Dispatch<React.SetStateAction<Currencies>>;\r\n  setFrom: React.Dispatch<React.SetStateAction<Currencies>>;\r\n}\r\n\r\nconst Swap: React.FC<Props> = ({ from, to, setFrom, setTo }) => {\r\n  const [swapping, setSwapping] = useState(false);\r\n\r\n  const onSwap = () => {\r\n    setSwapping(true);\r\n\r\n    const timer = setTimeout(() => {\r\n      setSwapping(false);\r\n      clearTimeout(timer);\r\n    }, 0.2 * 1000);\r\n\r\n    setTo(from);\r\n    setFrom(to);\r\n  };\r\n\r\n  return (\r\n    <div className={styles.swap} onClick={onSwap}>\r\n      <button className={`${swapping && styles.swapAnimation}`}>\r\n        <SwapIcon size='16px' />\r\n      </button>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Swap;\r\n","import React, { useState } from 'react';\r\nimport styles from './TabBox.module.css';\r\nimport { Currencies, errorMessage } from '../../common/common';\r\nimport CurrencyInput from '../CurrencyInput/CurrencyInput';\r\nimport { useEffect } from 'react';\r\nimport currencyApi from '../../api/currency';\r\nimport Footer from '../Footer/Footer';\r\nimport AmountInput from '../AmountInput/AmountInput';\r\nimport Swap from '../Swap/Swap';\r\n\r\nconst TabBox: React.FC = () => {\r\n  const [to, setTo] = useState<Currencies>('RUB');\r\n  const [from, setFrom] = useState<Currencies>('USD');\r\n  const [amount, setAmount] = useState('1.00');\r\n  const [currencyRate, setCurrencyRate] = useState(0);\r\n  const [changeInPercentage, setChangeInPercentage] = useState('');\r\n  const [lastUpdate, setLastUpdate] = useState('');\r\n  const [error, setError] = useState('');\r\n  const [countdown, setCountdown] = useState(0);\r\n  const [success, setSuccess] = useState(true);\r\n\r\n  const setLastCurrencyUpdate = (tm: string) => {\r\n    const date = new Date(tm).toString().split(' ');\r\n    const month = date[1];\r\n    const day = date[2][0] === '0' ? date[2][1] : date[2];\r\n    const year = date[3];\r\n    const time = date[4].split(':').slice(0, 2).join(':');\r\n\r\n    return setLastUpdate(`${month} ${day}, ${year}, ${time}`);\r\n  };\r\n\r\n  useEffect(() => {\r\n    const fetchRate = async () => {\r\n      const data = await currencyApi.getLatestRate(from, to);\r\n\r\n      if (data.status) {\r\n        const rate = data.response[0].o;\r\n        const percents = data.response[0].cp;\r\n        const time = data.response[0].tm;\r\n\r\n        setChangeInPercentage(percents);\r\n        setLastCurrencyUpdate(time);\r\n        setCurrencyRate(+rate);\r\n        setError('');\r\n      } else {\r\n        if (data.msg === errorMessage) setCountdown(60);\r\n\r\n        if (\r\n          data.msg ===\r\n          'Sorry, Something wrong, or an invalid value. Please try again or check your required parameters.'\r\n        ) {\r\n          setError(`Sorry, this conversion is not supported (API restriction)`);\r\n        } else {\r\n          setError(`${data.msg} (API restriction)`);\r\n        }\r\n\r\n        setCurrencyRate(0);\r\n        setChangeInPercentage('');\r\n        setLastUpdate('');\r\n      }\r\n    };\r\n\r\n    if (success) fetchRate();\r\n  }, [from, to, success]);\r\n\r\n  useEffect(() => {\r\n    if (countdown === 60) {\r\n      setCountdown(60 - 1);\r\n      const interval = setInterval(() => {\r\n        setCountdown(v => +(v - 1).toFixed(2));\r\n      }, 1000);\r\n      const timer = setTimeout(() => {\r\n        setError('');\r\n        setSuccess(true);\r\n        setCountdown(0);\r\n        clearTimeout(timer);\r\n        clearInterval(interval);\r\n      }, 60 * 1000);\r\n\r\n      setSuccess(false);\r\n    }\r\n  }, [error, countdown]);\r\n\r\n  return (\r\n    <div className={styles.tabBox}>\r\n      <div className={styles.row}>\r\n        <AmountInput amount={amount} from={from} setAmount={setAmount} />\r\n        <CurrencyInput currency={from} label={'From'} setCurrency={setFrom} />\r\n        <Swap from={from} to={to} setFrom={setFrom} setTo={setTo} />\r\n        <CurrencyInput currency={to} label={'To'} setCurrency={setTo} />\r\n      </div>\r\n\r\n      <Footer\r\n        countdown={countdown}\r\n        from={from}\r\n        to={to}\r\n        currencyRate={currencyRate}\r\n        changeInPercentage={changeInPercentage}\r\n        amount={amount}\r\n        lastUpdate={lastUpdate}\r\n        error={error}\r\n      />\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default TabBox;\r\n","import React from 'react';\nimport './App.css';\nimport TabBox from './TabBox/TabBox';\n\nconst App: React.FC = () => {\n  return (\n    <div className='App'>\n      <div className='container'>\n        <TabBox />\n      </div>\n    </div>\n  );\n};\n\nexport default App;\n","import { ReportHandler } from 'web-vitals';\n\nconst reportWebVitals = (onPerfEntry?: ReportHandler) => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './components/App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"lastUpdate\":\"Footer_lastUpdate__1QjSL\",\"currency\":\"Footer_currency__OtTn8\",\"error\":\"Footer_error__YVxTY\",\"timer\":\"Footer_timer__2oFvt\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"inputWrap\":\"AmountInput_inputWrap__G34YO\",\"inputInner\":\"AmountInput_inputInner__KgMFX\",\"inputName\":\"AmountInput_inputName__1asSI\",\"arrowWrap\":\"AmountInput_arrowWrap__3xipD\",\"crossWrap\":\"AmountInput_crossWrap__3v_Kl\"};"],"sourceRoot":""}